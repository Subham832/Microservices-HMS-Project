package com.bookingservice.entity;
// Declares the package this entity belongs to.

import java.time.LocalDate;
// Imports LocalDate class to represent dates without time.

import jakarta.persistence.*;
// Imports JPA annotations for ORM (Object-Relational Mapping).

@Entity
// Marks this class as a JPA entity, so it maps to a database table.

@Table(name = "booking_date")
// Specifies the database table name to map this entity to "booking_date".

public class BookingDate {
// Defines the public class named BookingDate representing a booking date entity.

    @Id
    // Marks this field as the primary key of the entity.

    @GeneratedValue(strategy = GenerationType.IDENTITY)
    // Specifies that the primary key is auto-generated by the database using an identity column.

    private long id;
    // Private field to store the unique ID of the booking date.

    private LocalDate date;
    // Private field to store the booking date (without time).

    @ManyToOne
    // Defines a many-to-one relationship between BookingDate and Bookings (many BookingDate entries can belong to one Booking).

    @JoinColumn(name = "booking_id")
    // Specifies the foreign key column "booking_id" in this table that links to the Bookings entity.

    private Bookings bookings;
    // Private field referencing the associated Bookings entity for this booking date.

    // Getter method for 'id' field.
    public long getId() {
        return id;
    }

    // Getter method for 'date' field.
    public LocalDate getDate() {
        return date;
    }

    // Getter method for 'bookings' field.
    public Bookings getBookings() {
        return bookings;
    }

    // Setter method for 'id' field.
    public void setId(long id) {
        this.id = id;
    }

    // Setter method for 'date' field.
    public void setDate(LocalDate date) {
        this.date = date;
    }

    // Setter method for 'bookings' field.
    public void setBookings(Bookings bookings) {
        this.bookings = bookings;
    }
}
